---
- name: Sanity check to see if hostname is passed if configmap with app.ini is provided
  when: _gitea_config_map_name | default("") | length > 0
  ansible.builtin.assert:
    that: _gitea_hostname | default("") | length > 0
    fail_msg: "giteaHostname must be specified if giteaConfigMapName is set."

- name: Create OpenShift objects for Gitea
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item) | from_yaml }}"
  loop:
  - serviceaccount.yaml.j2
  - persistentvolumeclaim.yaml.j2
  - service.yaml.j2
  - route.yaml.j2

- name: Get Gitea route hostname
  kubernetes.core.k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: "{{ _gitea_name }}"
    namespace: "{{ _gitea_namespace }}"
  register: r_route

- name: Store Gitea route hostname
  ansible.builtin.set_fact:
    _gitea_actual_route_url: "{{ 'http' if not _gitea_ssl | default(false) | bool else 'https' }}://{{ r_route.resources[0].status.ingress[0].host }}"
    _gitea_actual_route_hostname: "{{ r_route.resources[0].status.ingress[0].host }}"

- name: Create ConfigMap with app.ini if not provided
  when: _gitea_config_map_name | default('') | length == 0
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'configmap.yaml.j2') | from_yaml }}"

- name: Create Gitea deployment
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'deployment.yaml.j2') | from_yaml }}"

- name: Wait until application is available
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: "{{ _gitea_name }}"
    namespace: "{{ _gitea_namespace }}"
  register: r_deployment
  until:
  - r_deployment.resources[0].status.availableReplicas is defined
  - r_deployment.resources[0].status.availableReplicas == 1
  retries: 50
  delay: 10
  ignore_errors: true

- name: Save route in custom resource status
  operator_sdk.util.k8s_status:
    api_version: pfe.rhpds.com/v1
    kind: Gitea
    name: "{{ _gitea_name }}"
    namespace: "{{ _gitea_namespace }}"
    status:
      giteaRoute: "{{ _gitea_actual_route_url }}"
      giteaHostname: "{{ _gitea_actual_route_hostname }}"

- name: Retrieve Gitea resource to check admin setup
  kubernetes.core.k8s_info:
    api_version: pfe.rhpds.com/v1
    kind: Gitea
    name: "{{ _gitea_name }}"
    namespace: "{{ _gitea_namespace }}"
  register: r_gitea_admin

- name: Set up admin user
  when:
  - not r_gitea_admin.resources[0].status.adminSetupComplete | default(false) | bool
  - _gitea_admin_user | default("") | length > 0
  block:
  - name: Check if secret is specified with admin password
    when: _gitea_admin_password_secret_name | default("") | length > 0
    kubernetes.core.k8s_info:
      api_version: v1
      kind: Secret
      name: "{{ _gitea_admin_password_secret_name }}"
      namespace: "{{ _gitea_namespace }}"
    register: r_admin_password_secret

  - name: Set admin password from secret
    when:
    - r_admin_password_secret.resources is defined
    - r_admin_password_secret.resources | length > 0
    - r_admin_password_secret.resources[0].data is defined
    - r_admin_password_secret.resources[0].data.adminPassword is defined
    - r_admin_password_secret.resources[0].data.adminPassword | length > 0
    ansible.builtin.set_fact:
      _gitea_actual_admin_password: "{{ r_admin_password_secret.resources[0].data.adminPassword | b64decode }}"

  - name: Set admin password
    when:
    - _gitea_admin_password_secret_name | default("") | length == 0
    - _gitea_admin_password | default("") | length > 0
    ansible.builtin.set_fact:
      _gitea_actual_admin_password: "{{ _gitea_admin_password }}"

  - name: Generate admin password
    when:
    - _gitea_admin_password_secret_name | default("") | length == 0
    - _gitea_admin_password | default("") | length == 0
    ansible.builtin.set_fact:
      _gitea_actual_admin_password: >-
        {{ lookup('password', '/dev/null length={{ _gitea_admin_password_length | default( 16 ) }} chars=ascii_letters,digits') }}

  - name: Check if Gitea admin user already exists
    ansible.builtin.uri:
      url: "{{ _gitea_actual_route_url }}/api/v1/users/{{ _gitea_admin_user }}"
      method: GET
      validate_certs: false
      status_code: 200, 404
    register: r_gitea_admin_user
    retries: 20
    delay: 5
    until: r_gitea_admin_user.status == 200 or r_gitea_admin_user.status == 404
    failed_when: r_gitea_admin_user.status != 200 and r_gitea_admin_user.status != 404

  - name: Create Gitea admin user
    when: r_gitea_admin_user.status == 404
    block:
    - name: Retrieve Gitea pod
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: "{{ _gitea_namespace }}"
        label_selectors:
        - app = {{ _gitea_name }}
      register: r_gitea_pod

    - name: Create Gitea admin user
      kubernetes.core.k8s_exec:
        namespace: "{{ _gitea_namespace }}"
        pod: "{{ r_gitea_pod.resources[0].metadata.name }}"
        command: >-
          /usr/bin/giteacmd admin user create
          --username {{ _gitea_admin_user }}
          --password {{ _gitea_actual_admin_password }}
          --email {{ _gitea_admin_email }}
          --must-change-password=false
          --admin
      register: r_create_admin_user

    - name: Save admin password and status in custom resource status
      when: r_create_admin_user.return_code == 0
      operator_sdk.util.k8s_status:
        api_version: pfe.rhpds.com/v1
        kind: Gitea
        name: "{{ _gitea_name }}"
        namespace: "{{ _gitea_namespace }}"
        status:
          adminPassword: "{{ _gitea_actual_admin_password }}"
          adminSetupComplete: true

- name: Retrieve Gitea resource to check user setup
  when: _gitea_create_users | bool
  kubernetes.core.k8s_info:
    api_version: pfe.rhpds.com/v1
    kind: Gitea
    name: "{{ _gitea_name }}"
    namespace: "{{ _gitea_namespace }}"
  register: r_gitea_users

- name: Sanity check to only create users when admin user created
  when:
  - _gitea_create_users | bool
  - _gitea_admin_user | default("") | length == 0
  operator_sdk.util.k8s_status:
    api_version: pfe.rhpds.com/v1
    kind: Gitea
    name: "{{ _gitea_name }}"
    namespace: "{{ _gitea_namespace }}"
    status:
      userSetupError: "Error, can not create users without admin user."
      userSetupComplete: true

- name: Set up users in Gitea (only if admin user has been created also)
  when:
  - _gitea_create_users | bool
  - _gitea_admin_user | default("") | length > 0
  - _gitea_user_number | default(0) | int > 0
  - r_gitea_users.resources[0].status.adminPassword | default("") | length > 0
  - not r_gitea_users.resources[0].status.userSetupComplete | default(false) | bool
  block:
  - name: Set actual admin password
    ansible.builtin.set_fact:
      _gitea_actual_admin_password: "{{ r_gitea_users.resources[0].status.adminPassword }}"

  - name: Check if secret is specified with user password
    when: _gitea_user_password_secret_name | default("") | length > 0
    kubernetes.core.k8s_info:
      api_version: v1
      kind: Secret
      name: "{{ _gitea_user_password_secret_name }}"
      namespace: "{{ _gitea_namespace }}"
    register: r_user_password_secret

  - name: Set user password from secret
    when:
    - r_user_password_secret.resources is defined
    - r_user_password_secret.resources | length > 0
    - r_user_password_secret.resources[0].data is defined
    - r_user_password_secret.resources[0].data.userPassword is defined
    - r_user_password_secret.resources[0].data.userPassword | length > 0
    ansible.builtin.set_fact:
      _gitea_actual_user_password: "{{ r_user_password_secret.resources[0].data.userPassword | b64decode }}"

  - name: Set user password
    when:
    - _gitea_user_password_secret_name | default("") | length == 0
    - _gitea_user_password | default("") | length > 0
    ansible.builtin.set_fact:
      _gitea_actual_user_password: "{{ _gitea_user_password }}"

  - name: Generate user password
    when:
    - _gitea_user_password_secret_name | default("") | length == 0
    - _gitea_user_password | default("") | length == 0
    ansible.builtin.set_fact:
      _gitea_actual_user_password: >-
        {{ lookup('password', '/dev/null length={{ _gitea_user_password_length | default( 16 ) }} chars=ascii_letters,digits') }}

  - name: Create the users in Gitea
    ansible.builtin.include_tasks: create_user.yml
    loop: "{{ range(1, _gitea_user_number | int + 1) | list }}"

  - name: Save user password and status in custom resource status
    operator_sdk.util.k8s_status:
      api_version: pfe.rhpds.com/v1
      kind: Gitea
      name: "{{ _gitea_name }}"
      namespace: "{{ _gitea_namespace }}"
      status:
        userPassword: "{{ _gitea_actual_user_password }}"
        userSetupComplete: true

- name: Retrieve Gitea resource to check repo status
  kubernetes.core.k8s_info:
    api_version: pfe.rhpds.com/v1
    kind: Gitea
    name: "{{ _gitea_name }}"
    namespace: "{{ _gitea_namespace }}"
  register: r_gitea_repos

- name: Migrate repositories only if users and admin user have been created
  when:
  - _gitea_create_users | bool
  - _gitea_admin_user | default("") | length > 0
  - _gitea_user_number | default(0) | int > 0
  - _gitea_migrate_repositories | bool
  - r_gitea_repos.resources[0].status.userSetupComplete | default(false) | bool
  - r_gitea_repos.resources[0].status.adminPassword | default("") | length > 0
  - not r_gitea_repos.resources[0].status.repoMigrationComplete | default(false) | bool
  block:
  - name: Set actual admin password
    ansible.builtin.set_fact:
      _gitea_actual_admin_password: "{{ r_gitea_repos.resources[0].status.adminPassword }}"

  - name: Migrate repositories
    ansible.builtin.include_tasks: migrate_repos.yml
    loop: >-
      {{
      ( range(1, _gitea_user_number | int + 1) | list )
      | product(_gitea_repositories_list)
      | list
      }}

  - name: Save repo migration status in custom resource status
    operator_sdk.util.k8s_status:
      api_version: pfe.rhpds.com/v1
      kind: Gitea
      name: "{{ _gitea_name }}"
      namespace: "{{ _gitea_namespace }}"
      status:
        repoMigrationComplete: true
